exports.default=function(e){var n={};function t(o){if(n[o])return n[o].exports;var r=n[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,t),r.l=!0,r.exports}return t.m=e,t.c=n,t.d=function(e,n,o){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:o})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(t.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var r in e)t.d(o,r,function(n){return e[n]}.bind(null,r));return o},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=0)}([function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});const o=t(1),r=t(2),i=t(3),u=`${r.tmpdir}${i.sep}joplin-plantUml2-plugin${i.sep}`,l=/^plant-?uml$/i;n.default=function(e){return{plugin:function(n,t){const r=n.renderer.rules.fence||function(e,n,t,o,r){return r.renderToken(e,n,t)};n.renderer.rules.fence=function(n,t,i,d,a){const s=n[t];if(!l.test(s.info))return r(n,t,i,d,a);const c=o.createHash("sha1").update(s.content).digest("hex"),p=JSON.stringify({content:s.content,id:c}),m=`\n                // Configure context menu\n                document.getElementById('plantuml-body-${c}').addEventListener('mousedown', e => {\n                    const menu = document.getElementById('plantuml-menu-${c}');\n                    if(e.button === 2) {\n                        menu.style.display = '';\n                    } else {\n                        menu.style.display = 'none';\n                    }\n                });\n                document.getElementById('plantuml-menu-${c}-copyImage').addEventListener('click', async e => {\n                    const img = document.querySelector("#plantuml-body-${c}>div>*:first-child");\n                    if(img) {\n                        const response = await fetch(img.dataset.imageUrl);\n                        navigator.clipboard.write([\n                            new ClipboardItem({ 'image/png': await response.blob() })\n                        ]);\n                    }\n                });\n                document.getElementById('plantuml-menu-${c}-copyImageAddress').addEventListener('click', e => {\n                    const img = document.querySelector("#plantuml-body-${c}>div>*:first-child");\n                    if(img) {\n                        navigator.clipboard.writeText(img.dataset.url);\n                    }\n                });\n\n                // Send fence content to plugin\n                webviewApi.postMessage('${e.contentScriptId}', ${p}).then((response) => {\n                   document.getElementById('plantuml-body-${c}').innerHTML = response;\n                   document.getElementById('plantuml-menu-${c}').style = "";\n                });\n                `.replace(/"/g,"&quot;");return`\n                <div id="plantuml-root-${c}" class="plantUML-container" tabindex="-1">\n                    <div class="hidden" style="display:none">\n                        <pre>\n\`\`\`plantuml\n${s.content}\`\`\`</pre>\n                    </div>\n                    <div id="plantuml-body-${c}" class="flex-center">\n                        <object data="${u}${c}.svg" type="image/svg+xml"></object>\n                        <object data="${u}${c}.png" type="image/png"></object>\n                    </div>\n                    <div id="plantuml-menu-${c}" class="menu" style="display:none">\n                        <div class="menu-options">\n                            <div class="menu-option"><input id="plantuml-menu-${c}-copyImage" value="Copy image" /></div>\n                            <div class="menu-option"><input id="plantuml-menu-${c}-copyImageAddress" value="Copy image address" /></div>\n                        </div>\n                    </div>\n                </div>\n                <style onload="${m}"></style>\n                `}},assets:function(){return[{name:"style.css"}]}}}},function(e,n){e.exports=require("crypto")},function(e,n){e.exports=require("os")},function(e,n){e.exports=require("path")}]).default;